<?php
// auto-generated by sfViewConfigHandler
// date: 2013/09/21 22:15:53
$response = $this->context->getResponse();

if ($this->actionName.$this->viewName == 'pingSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'authSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'signinSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'loginSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}

if ($templateName.$this->viewName == 'pingSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else
  {
    $this->setDecoratorTemplate('' == '' ? false : ''.$this->getExtension());
  }
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addMeta('title', 'Authpuppy Authentication Server', false, false);
  $response->addMeta('description', 'Authpuppy authentication server for wifidog wireless networks', false, false);

  $response->addStylesheet('bootstrap.min.css', '', array ());
  $response->addStylesheet('bootstrap-responsive.min.css', '', array ());
  $response->addStylesheet('main.css', '', array ());
  $response->addJavascript('jquery.js', '', array ());
  $response->addJavascript('bootstrap.min.js', '', array ());
  $response->addJavascript('authpuppy.js', '', array ());
}
else if ($templateName.$this->viewName == 'authSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else
  {
    $this->setDecoratorTemplate('' == '' ? false : ''.$this->getExtension());
  }
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addMeta('title', 'Authpuppy Authentication Server', false, false);
  $response->addMeta('description', 'Authpuppy authentication server for wifidog wireless networks', false, false);

  $response->addStylesheet('bootstrap.min.css', '', array ());
  $response->addStylesheet('bootstrap-responsive.min.css', '', array ());
  $response->addStylesheet('main.css', '', array ());
  $response->addJavascript('jquery.js', '', array ());
  $response->addJavascript('bootstrap.min.js', '', array ());
  $response->addJavascript('authpuppy.js', '', array ());
}
else if ($templateName.$this->viewName == 'signinSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else
  {
    $this->setDecoratorTemplate('' == 'company' ? false : 'company'.$this->getExtension());
  }
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addMeta('title', 'Authpuppy Authentication Server', false, false);
  $response->addMeta('description', 'Authpuppy authentication server for wifidog wireless networks', false, false);

  $response->addStylesheet('bootstrap.min.css', '', array ());
  $response->addStylesheet('bootstrap-responsive.min.css', '', array ());
  $response->addStylesheet('main.css', '', array ());
  $response->addStylesheet('witure/company.css', '', array ());
  $response->addJavascript('jquery.js', '', array ());
  $response->addJavascript('bootstrap.min.js', '', array ());
  $response->addJavascript('authpuppy.js', '', array ());
}
else if ($templateName.$this->viewName == 'loginSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else
  {
    $this->setDecoratorTemplate('' == 'client' ? false : 'client'.$this->getExtension());
  }
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addMeta('title', 'Authpuppy Authentication Server', false, false);
  $response->addMeta('description', 'Authpuppy authentication server for wifidog wireless networks', false, false);

  $response->addStylesheet('bootstrap.min.css', '', array ());
  $response->addStylesheet('bootstrap-responsive.min.css', '', array ());
  $response->addStylesheet('main.css', '', array ());
  $response->addJavascript('jquery.js', '', array ());
  $response->addJavascript('bootstrap.min.js', '', array ());
  $response->addJavascript('authpuppy.js', '', array ());
}
else
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addMeta('title', 'Authpuppy Authentication Server', false, false);
  $response->addMeta('description', 'Authpuppy authentication server for wifidog wireless networks', false, false);

  $response->addStylesheet('bootstrap.min.css', '', array ());
  $response->addStylesheet('bootstrap-responsive.min.css', '', array ());
  $response->addStylesheet('main.css', '', array ());
  $response->addJavascript('jquery.js', '', array ());
  $response->addJavascript('bootstrap.min.js', '', array ());
  $response->addJavascript('authpuppy.js', '', array ());
}

